#!/bin/bash

WORKING_TEMP_DIR=$(mktemp -d -t tmp.XXXXXXXXXX)
function finish {
  rm -rf "$WORKING_TEMP_DIR"
}
trap finish EXIT

set -e

ADDON_DIR="${1:-$WOW_ADDON_DIR}"
if [ -z "$ADDON_DIR" ]
then
  echo 'Set $WOW_ADDON_DIR or pass addon directory as argument!'
  exit 1
fi

git_repo() {
  git clone "$1" "$ADDON_DIR$2" 2> /dev/null || git -C "$ADDON_DIR$2" pull &> /dev/null
}

curse_project_slug() {
echo "Installing Latest $1 from Curse"
zip_url "https://wow.curseforge.com/projects/$1/files/latest"
}

wowace_slug() {
echo "Installing Latest $1 from WowAce"
zip_url "https://www.wowace.com/projects/$1/files/latest"
}

zip_url() {
cd "$WORKING_TEMP_DIR"

addon_zip=$(mktemp -t XXXXX.addon.zip -p "$WORKING_TEMP_DIR")

curl -s -L $1 --output $addon_zip > /dev/null
unzip -oq $addon_zip -d "$ADDON_DIR" $2
}

nested_zip_url() {
NESTED_LINK="$ADDON_DIR$2"
ln -s "$ADDON_DIR" "$NESTED_LINK"
zip_url $1
rm "$NESTED_LINK"
}

curse_project_slug scrap &
curse_project_slug big-wigs &
curse_project_slug little-wigs &
curse_project_slug capping-bg-timers &
curse_project_slug lootappraiser &
curse_project_slug lootappraiser_challenge &
curse_project_slug details &
curse_project_slug askmrrobot &
curse_project_slug raiderio &

wowace_slug blockchinese &
wowace_slug advancedinterfaceoptions &

echo "Installing Latest ElvUI from git.tukui.org"
nested_zip_url https://git.tukui.org/elvui/elvui/-/archive/master/elvui-master.zip elvui-master &

wait
